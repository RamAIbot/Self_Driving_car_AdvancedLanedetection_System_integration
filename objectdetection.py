# -*- coding: utf-8 -*-
"""Objectdetection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SVlZ61IRNl_tAdx_cfjN5GMBwsYwMMxF
"""

!git clone https://github.com/yhenon/pytorch-retinanet.git
!apt-get install tk-dev python-tk
!pip install pandas
!pip install pycocotools
!pip install opencv-python
!pip install requests

#!wget https://drive.google.com/open?id=1yLmjq3JtXi841yXWBxst0coAgR26MNBS
!gdown --id 1yLmjq3JtXi841yXWBxst0coAgR26MNBS

import torch
import torchvision.models as models

retinanet = models.resnet50(num_classes=3,)
retinanet.load_state_dict(torch.load('/content/coco_resnet_50_map_0_335_state_dict.pt'),strict=False)

from google.colab import drive
drive.mount('/content/drive')

!cp '/content/drive/MyDrive/Objectdetection/images.tar' '/content/images.tar'

!tar -xvf  '/content/images.tar' -C '/content/'

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
import requests
import urllib
import os
from PIL import Image

# from keras_retinanet import models
# from keras_retinanet.utils.image import preprocess_image, resize_image
# from keras_retinanet.utils.visualization import draw_box, draw_caption
# from keras_retinanet.utils.colors import label_color

df_train = pd.read_csv('/content/train_labels.csv')
df_train.head()

df_test = pd.read_csv('/content/test_labels.csv')
df_test.head()

train_data = df_train.iloc[:,[0,4,5,6,7,3]]
train_data.head()

test_data = df_test.iloc[:,[0,4,5,6,7,3]]
test_data.head()

train_path = '/content/images/train'
train_data['filename'] = train_data['filename'].apply(lambda x:x.replace(x,os.path.join(train_path,x)))
train_data.head()

test_path = '/content/images/test'
test_data['filename'] = test_data['filename'].apply(lambda x:x.replace(x,os.path.join(test_path,x)))
test_data.head()

train_data.to_csv('/content/train_annotations.csv', index=False, header=None)

test_data.to_csv('/content/test_annotations.csv', index=False, header=None)

classes = ['Red_signal','Green_signal','Yellow_signal']
with open('/content/classes.csv', 'w') as f:
  for i, class_name in enumerate(classes):
    f.write(f'{class_name},{i}\n')

!head /content/train_annotations.csv

!head /content/classes.csv

!head /content/test_annotations.csv

!python '/content/pytorch-retinanet/train.py' --dataset csv --csv_train '/content/train_annotations.csv' --csv_classes '/content/classes.csv' --csv_val '/content/test_annotations.csv'

#python coco_validation.py --coco_path ~/path/to/coco --model_path /path/to/model/coco_resnet_50_map_0_335_state_dict.pt

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
!python '/content/pytorch-retinanet/visualize_single_image.py' --image_dir '/content/images/test/' --model_path '/content/csv_retinanet_50.pt' --class_list '/content/classes.csv'